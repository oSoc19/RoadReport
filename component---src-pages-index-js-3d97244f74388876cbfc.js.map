{"version":3,"sources":["webpack:///./src/components/webWork.js","webpack:///./src/components/workText.js","webpack:///./src/components/seo.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/images/app_2.png","webpack:///./src/images/app_3.png"],"names":["WebWork","props","console","log","image1","react_default","a","createElement","className","WebWorkStyles","container","work","style","backgroundImage","image2","WorkText","textContainer","title","text","intro","children","btnStyle","href","github","SEO","_ref","description","lang","meta","keywords","site","_2417117884","data","metaDescription","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","IndexPage","layout","workText","indexStyle","buttonWhite","margin","fontWeight","fontSize","fontFamily","webWork","app1","app2","id","workContainer","buttonBlack","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","query","render","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","header","headerStyles","gatsby_browser_entry","linklogo","to","logo","linkContainer","link","Layout","Fragment","_755544856","node","p"],"mappings":"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","file":"component---src-pages-index-js-3d97244f74388876cbfc.js","sourcesContent":["import React from \"react\"\n\nimport WebWorkStyles from \"./webWork.module.css\"\n\nfunction WebWork(props) {\n  console.log(props.image1);\n  return(\n  <div className={WebWorkStyles.container}>\n    <div className={WebWorkStyles.work} style={{backgroundImage: `url(${props.image1})`}}></div>\n    <div className={WebWorkStyles.work} style={{backgroundImage: `url(${props.image2})`}}></div>\n  </div>\n  )\n}\n\nexport default WebWork\n","import React from \"react\"\n\nimport WebWorkStyles from \"./webWork.module.css\"\n\nfunction WorkText(props) {\n  return(\n  <div className={WebWorkStyles.textContainer}>\n    <h1 className={WebWorkStyles.title}>{props.title}</h1>\n    <p className={WebWorkStyles.text}>{props.intro}</p>\n\n    {props.children}\n\n    <a className={props.btnStyle} href={props.github}>View on Github</a>\n  </div>\n  )\n}\n\nexport default WorkText\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `google-site-verification`,\n          content: `tp8GPGYtzFXmZELkekHvCbAahcb73axhg_9MR-XCBYE`,\n        },\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport WebWork from \"../components/webWork\"\nimport WorkText from \"../components/workText\"\nimport SEO from \"../components/seo\"\n\nimport indexStyle from \"./index.module.css\"\n\nimport app1 from \"../images/app_2.png\"\nimport app2 from \"../images/app_3.png\"\n\nconst IndexPage = () => (\n  <Layout>\n    <section className=\"first\">\n    <WorkText \n        title=\"ROAD REPORT\" \n        intro=\"With Road Report, cyclists and pedestrians can report problems such as potholes or broken paving slabs they encounter in the city. Road Report sends this data to our partner TMaaS, who supports the city of Ghent to spot problems quicker and to improve the quality of the sidewalks and cycling paths!\"\n        btnStyle={indexStyle.buttonWhite}\n        github=\"https://github.com/gdmgent-1819-mobdev2/positive-design-moodify\"\n        >\n\t\t\t<div style={{margin: 0,fontWeight: 300, fontSize: '1vw', fontFamily: 'Roboto, sans-serif'}}>\n\t\t\t\tAt open Summer of code 2019, three students built Road Report. An open source project based on a mobile application and a website that has a double social benefit:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tCitizens can directly communicate with those responsible of the mobility in their city.\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tCities can use this data to become smarter, quicker and more effective fixing mobility problems\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n    </WorkText>\n\t<WebWork image1={app1} image2={app2}/>\n    </section>\n    \n    <section id=\"second_section\" className=\"second\">\n      <div className={indexStyle.workContainer}>\n        <WorkText \n        title=\"Moodify\" \n        intro=\"For our Mobile Development class we needed to make a mood app. \n        Me and my group wanted to make a mood app that's different from others, so we started brainstorming.\"\n        btnStyle={indexStyle.buttonBlack}\n        github=\"https://github.com/gdmgent-1819-mobdev2/positive-design-moodify\"\n        />\n\t\t<WebWork image1={app1} image2={app2}/>\n      </div>\n    </section>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nimport headerStyles from \"./header.module.css\"\n\nexport default() => (\n  <header>\n    <div className={headerStyles.container}>\n    <Link className={headerStyles.linklogo} to=\"/\"> <h1 className={headerStyles.logo}>ROAD REPORT</h1> </Link>\n      <div className={headerStyles.linkContainer}>\n        <Link className={headerStyles.link} to=\"#team\">Team</Link>\n        <Link className={headerStyles.link} to=\"#partners\">Partners</Link>\n      </div>\n    </div>\n  </header>\n) \n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"../components/header\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header/>\n          <main>{children}</main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/app_2-0c962526b519e922b922aae030627fd1.png\";","module.exports = __webpack_public_path__ + \"static/app_3-d2dfddc9932bd8b3f082c4d59c05e900.png\";"],"sourceRoot":""}